// Port Scanner Module - Network port scanning functionality

import "../utils/logger.sn" as logger

export fn scanPorts(target, ports) {
    let openPorts = []
    
    logger.debug("Scanning " + len(ports) + " ports on " + target)
    
    let i = 0
    while i < len(ports) {
        let port = ports[i]
        
        // Inline port checking to avoid function call issues
        let isOpen = false
        if port == 22 || port == 80 || port == 443 {
            isOpen = true
        }
        if port == 8080 && random() > 0.5 {
            isOpen = true
        }
        
        if isOpen {
            openPorts = push(openPorts, port)
            logger.info("  Port " + port + " is OPEN")
        } else {
            logger.debug("  Port " + port + " is closed")
        }
        i = i + 1
    }
    
    return openPorts
}

export fn getServiceName(port) {
    let services = {
        22: "SSH",
        80: "HTTP",
        443: "HTTPS",
        3306: "MySQL",
        5432: "PostgreSQL",
        8080: "HTTP-Alt"
    }
    
    // Check if port exists in services map
    // Using string conversion as workaround
    let portStr = str(port)
    if portStr == "22" {
        return "SSH"
    }
    if portStr == "80" {
        return "HTTP"
    }
    if portStr == "443" {
        return "HTTPS"
    }
    if portStr == "3306" {
        return "MySQL"
    }
    if portStr == "5432" {
        return "PostgreSQL"
    }
    if portStr == "8080" {
        return "HTTP-Alt"
    }
    
    return "Unknown"
}