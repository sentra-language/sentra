log("Step-by-step test...")

let explorer_procs = mem_find_process("explorer.exe")
log("Step 1: Got explorer_procs")

log("Step 2: Check if len > 0")
if (len(explorer_procs) > 0) {
    log("Step 3: Inside if block")
    
    log("Step 4: Get first process")
    let proc = explorer_procs[0]
    log("Step 5: Got proc: " + type(proc))
    
    log("Step 6: Get PID")
    let pid_val = proc["pid"]
    log("Step 7: Got PID: " + str(pid_val))
    
    log("Step 8: About to call mem_get_process_info")
    let detailed = mem_get_process_info(proc["pid"])
    log("Step 9: Got detailed info")
    
    log("Step 10: Check if detailed exists")
    if (detailed) {
        log("Step 11: Inside detailed block")
        
        log("Step 12: Access path")
        let path_val = detailed["path"]
        log("Step 13: Path: " + path_val)
        
        log("Step 14: Access command line")
        let cmd_val = detailed["command_line"]
        log("Step 15: Command: " + cmd_val)
        
        log("Step 16: Access parent PID")
        let ppid_val = detailed["parent_pid"]
        log("Step 17: PPID: " + str(ppid_val))
        
        log("Step 18: Check memory field")
        if (detailed["memory"]) {
            log("Step 19: Memory exists, accessing...")
            let mem = detailed["memory"]
            log("Step 20: Got memory object")
            
            log("Step 21: Get working set")
            let ws = mem["working_set_size"]
            log("Step 22: Working set: " + str(ws))
        }
    }
} else {
    log("Explorer not found")
}

log("Test completed!")