fn selectionSort(arr) {
    // Create a copy
    let result = []
    for item in arr {
        result.push(item)
    }
    
    let n = len(result)
    let i = 0
    while i < n - 1 {
        log("Pass " + i)
        // Find minimum element in remaining array
        let minIdx = i
        let j = i + 1
        while j < n {
            log("  Comparing result[" + j + "]=" + result[j] + " with result[" + minIdx + "]=" + result[minIdx])
            if result[j] < result[minIdx] {
                log("    New min at index " + j)
                minIdx = j
            }
            j = j + 1
        }
        // Swap minimum with current position
        if minIdx != i {
            log("  Swapping result[" + i + "]=" + result[i] + " with result[" + minIdx + "]=" + result[minIdx])
            let temp = result[i]
            result[i] = result[minIdx]
            result[minIdx] = temp
        }
        log("  After pass: " + result)
        i = i + 1
    }
    return result
}

let test = [64, 34, 25]
log("Sorted: " + selectionSort(test))