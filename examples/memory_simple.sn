#!/usr/bin/env sentra

log("üß† Memory Forensics - Simple Test")
log("=================================")

// List all running processes
log("Getting process list...")
let processes = mem_enum_processes()
if (processes) {
    log("Total processes: " + str(len(processes)))
    
    // Show first process
    if (len(processes) > 0) {
        let proc = processes[0]
        log("First process: PID " + str(proc["pid"]) + " - " + proc["name"])
    }
} else {
    log("Failed to get process list")
}

// Try to find explorer.exe
log("\nLooking for explorer.exe...")
let explorer = mem_find_process("explorer.exe")
if (explorer && len(explorer) > 0) {
    let proc = explorer[0]
    log("Found explorer.exe: PID " + str(proc["pid"]))
    
    // Get memory regions
    log("Getting memory regions...")
    let regions = mem_get_regions(proc["pid"])
    if (regions) {
        log("Memory regions: " + str(len(regions)))
    }
    
    // Check for process hollowing
    log("Checking for process hollowing...")
    let hollowing = mem_detect_hollowing(proc["pid"])
    if (hollowing) {
        if (hollowing["detected"]) {
            log("‚ö†Ô∏è Process hollowing detected!")
        } else {
            log("‚úÖ No process hollowing detected")
        }
    }
} else {
    log("Explorer.exe not found")
}

// Get process tree
log("\nAnalyzing process tree...")
let tree = mem_get_process_tree()
if (tree) {
    log("Process tree contains " + str(tree["total_processes"]) + " processes")
}

log("\n‚úÖ Memory forensics test completed!")