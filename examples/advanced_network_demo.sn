// Advanced Network Security Demo
log("üåê Sentra Advanced Network Security Features")
log("=" * 50)

// Test network traffic analysis
log("\nüìä Network Traffic Analysis...")
let traffic_result = analyze_traffic("eth0", 5)
log("‚Ä¢ Total packets: " + traffic_result["total_packets"])
log("‚Ä¢ Total bytes: " + traffic_result["total_bytes"])
log("‚Ä¢ Time range: " + traffic_result["time_range"])
log("‚Ä¢ Protocols detected: " + len(traffic_result["protocol_stats"]) + " types")
log("‚Ä¢ Suspicious IPs: " + len(traffic_result["suspicious_ips"]))
log("‚Ä¢ Alerts generated: " + len(traffic_result["alerts"]))

// Test intrusion detection
log("\nüîç Network Intrusion Detection...")
let intrusion_alerts = detect_intrusions("eth0", 5)
log("‚Ä¢ Alerts detected: " + len(intrusion_alerts))
if len(intrusion_alerts) > 0 {
    let alert = intrusion_alerts[0]
    log("‚Ä¢ Latest alert type: " + alert["alert_type"])
    log("‚Ä¢ Severity: " + alert["severity"])
    log("‚Ä¢ Source IP: " + alert["source_ip"])
}

// Test advanced port scanning
log("\nüîé Advanced Port Scanning...")
let scan_results = advanced_port_scan("127.0.0.1", 80, 85, "tcp_connect")
log("‚Ä¢ Ports scanned: " + len(scan_results))
let open_ports = 0
for result in scan_results {
    if result["state"] == "open" {
        open_ports = open_ports + 1
    }
}
log("‚Ä¢ Open ports found: " + open_ports)

// Test SSL/TLS analysis
log("\nüîê SSL/TLS Security Analysis...")
let ssl_result = analyze_ssl("google.com", 443)
log("‚Ä¢ Host: " + ssl_result["host"])
log("‚Ä¢ SSL Version: " + ssl_result["ssl_version"])
log("‚Ä¢ Cipher Suite: " + ssl_result["cipher_suite"])
log("‚Ä¢ Security Grade: " + ssl_result["grade"])
log("‚Ä¢ Security issues: " + len(ssl_result["security_issues"]))
log("‚Ä¢ Recommendations: " + len(ssl_result["recommendations"]))

// Test network topology discovery
log("\nüó∫Ô∏è Network Topology Discovery...")
let topology = discover_network_topology("192.168.1.0/24")
log("‚Ä¢ Discovery timestamp: " + topology["timestamp"])
log("‚Ä¢ Network nodes found: " + len(topology["nodes"]))
log("‚Ä¢ Network links: " + len(topology["links"]))
log("‚Ä¢ Subnets: " + len(topology["subnets"]))
log("‚Ä¢ Gateways: " + len(topology["gateways"]))

if len(topology["nodes"]) > 0 {
    let node = topology["nodes"][0]
    log("‚Ä¢ Sample node IP: " + node["ip"])
    log("‚Ä¢ Sample node type: " + node["node_type"])
    log("‚Ä¢ Sample node OS: " + node["os"])
}

log("\n" + "=" * 50)
log("üéØ Advanced Network Security Analysis Complete!")
log("=" * 50)

log("\nüõ°Ô∏è Security Insights:")
log("‚Ä¢ Traffic analysis helps identify network anomalies")
log("‚Ä¢ Intrusion detection catches malicious activities")
log("‚Ä¢ Advanced port scanning reveals service exposure")
log("‚Ä¢ SSL analysis ensures encryption security")
log("‚Ä¢ Topology mapping shows network structure")

log("\n‚úÖ All advanced network security features operational!")
log("üöÄ Ready for comprehensive network security assessment!")