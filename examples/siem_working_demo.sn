#!/usr/bin/env sentra

log("SIEM Integration Demo")
log("=====================")

// Show supported log formats
log("Supported Log Formats")
log("---------------------")
let formats = siem_get_formats()
if (formats) {
    log("Available formats: " + str(len(formats)))
} else {
    log("No SIEM formats found")
}

// Parse Apache access logs
log("Parsing Apache Access Logs")
log("---------------------------")
let apache_logs = siem_parse_log("examples/sample_logs/apache.log", "apache")
if (apache_logs) {
    log("Parsed " + str(len(apache_logs)) + " Apache log entries")
    
    // Show first entry details
    if (len(apache_logs) > 0) {
        let entry = apache_logs[0]
        if (entry) {
            log("Sample entry:")
            log("  Host: " + entry["host"])
            log("  Message: " + entry["message"])
            log("  Level: " + entry["level"])
        }
    }
} else {
    log("Failed to parse Apache logs")
}

// Parse syslog entries
log("Parsing Syslog Entries")
log("----------------------")
let syslog_logs = siem_parse_log("examples/sample_logs/syslog.log", "syslog")
if (syslog_logs) {
    log("Parsed " + str(len(syslog_logs)) + " syslog entries")
} else {
    log("Failed to parse syslog")
}

// Parse JSON logs
log("Parsing JSON Logs")
log("-----------------")
let json_logs = siem_parse_log("examples/sample_logs/json.log", "json")
if (json_logs) {
    log("Parsed " + str(len(json_logs)) + " JSON log entries")
} else {
    log("Failed to parse JSON logs")
}

// Analyze all logs
log("Log Analysis")
log("------------")
if (apache_logs) {
    let stats = siem_analyze_logs(apache_logs)
    if (stats) {
        log("Analysis completed:")
        log("  Total events: " + str(stats["total_events"]))
        log("  Alerts: " + str(stats["alerts_generated"]))
    }
}

// Threat Detection
log("Threat Detection")
log("----------------")
if (apache_logs) {
    let threats = siem_detect_threats(apache_logs)
    if (threats && len(threats) > 0) {
        log("Detected " + str(len(threats)) + " potential threats")
    } else {
        log("No threats detected")
    }
}

// Event Correlation
log("Event Correlation")
log("------------------")
if (apache_logs) {
    let alerts = siem_correlate_events(apache_logs)
    if (alerts && len(alerts) > 0) {
        log("Generated " + str(len(alerts)) + " correlation alerts")
    } else {
        log("No correlation alerts generated")
    }
}

// Show correlation rules
log("Correlation Rules")
log("------------------")
let rules = siem_get_rules()
if (rules) {
    log("Active rules: " + str(len(rules)))
} else {
    log("No correlation rules loaded")
}

log("SIEM Demo Complete!")
log("Demonstrated capabilities:")
log("  Multi-format log parsing")
log("  Log analysis and statistics") 
log("  Threat indicator detection")
log("  Event correlation and alerting")