// Debug arithmetic operations to understand type conversion overhead
log("=== ARITHMETIC TYPE CONVERSION TEST ===")

// Test 1: Pure integer arithmetic (should be fast)
log("Test 1: Pure integer arithmetic")
let start = time()
let sum = 0
for (let i = 0; i < 5000; i = i + 1) {
    sum = sum + i
}
let int_time = time() - start
log("Integer arithmetic: " + int_time + "ms, Result: " + sum)

// Test 2: Mixed arithmetic (triggers type conversion)
log("Test 2: Mixed arithmetic with division")
start = time()
sum = 0
for (let i = 0; i < 5000; i = i + 1) {
    sum = sum + i * 2.0 - 1
    sum = sum / 1.1
}
let mixed_time = time() - start
log("Mixed arithmetic: " + mixed_time + "ms, Result: " + sum)

// Test 3: String concatenation (high overhead)
log("Test 3: String operations")
start = time()
let text = "start"
for (let i = 0; i < 500; i = i + 1) {
    text = text + " " + i
    if len(text) > 2000 {
        text = "reset"
    }
}
let string_time = time() - start
log("String operations: " + string_time + "ms, Length: " + len(text))

log("=== TYPE CONVERSION ANALYSIS ===")
log("Pure integer: " + int_time + "ms")
log("Mixed types: " + mixed_time + "ms") 
log("String ops: " + string_time + "ms")
let overhead = mixed_time - int_time
log("Type conversion overhead: " + overhead + "ms")