// Simplified Sentra VM Benchmark
// Tests core performance

fn inner_func(x) {
    return x * 2 + 1
}

fn benchmark_arithmetic() {
    let iterations = 1000
    let sum = 0
    let i = 0
    
    while i < iterations {
        sum = sum + i * 2 - 1
        i = i + 1
    }
    
    return sum
}

fn benchmark_function_calls() {
    let result = 0
    let i = 0
    while i < 100 {
        result = inner_func(i)
        i = i + 1
    }
    
    return result
}

fn benchmark_conditionals() {
    let count = 0
    let i = 0
    
    while i < 500 {
        if i > 250 {
            count = count + 1
        }
        i = i + 1
    }
    
    return count
}

// Run benchmarks
log("Sentra VM Performance Test")
log("==========================")

log("Arithmetic (1k iterations): " + benchmark_arithmetic())
log("Function calls (100 calls): " + benchmark_function_calls())
log("Conditionals (500 checks): " + benchmark_conditionals())
log("âœ“ Benchmarks completed")