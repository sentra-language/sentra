// First half of concurrency showcase to isolate the issue

log("=== Sentra Concurrency Showcase ===")

// 1. Create and start worker pools for parallel operations
log("Creating worker pools for parallel scanning...")

// Create a port scan worker pool
if (conc_create_worker_pool("port_scanner", 8, 100)) {
    log("✓ Port scanner worker pool created (8 workers)")
    conc_start_worker_pool("port_scanner")
    log("✓ Port scanner worker pool started")
}

// Create a web vulnerability scanner pool
if (conc_create_worker_pool("web_scanner", 4, 50)) {
    log("✓ Web vulnerability scanner pool created (4 workers)")
    conc_start_worker_pool("web_scanner")
    log("✓ Web vulnerability scanner pool started")
}

// Create a file scanner pool
if (conc_create_worker_pool("file_scanner", 6, 75)) {
    log("✓ File scanner worker pool created (6 workers)")
    conc_start_worker_pool("file_scanner")
    log("✓ File scanner worker pool started")
}

// 2. Create rate limiters to control scanning speed
log("Creating rate limiters...")

// Rate limiter for network operations (100 requests/sec, burst of 20)
if (conc_create_rate_limiter("network_limiter", 100, 20)) {
    log("✓ Network rate limiter created (100 req/sec, burst 20)")
}

// Rate limiter for web requests (50 requests/sec, burst of 10)
if (conc_create_rate_limiter("web_limiter", 50, 10)) {
    log("✓ Web rate limiter created (50 req/sec, burst 10)")
}

// Rate limiter for file operations (200 operations/sec, burst of 50)
if (conc_create_rate_limiter("file_limiter", 200, 50)) {
    log("✓ File rate limiter created (200 ops/sec, burst 50)")
}

// 3. Demonstrate parallel port scanning
log("")
log("=== Parallel Port Scanning ===")

let targets = ["127.0.0.1", "192.168.1.1", "8.8.8.8", "1.1.1.1"]
let common_ports = [22, 23, 25, 53, 80, 110, 143, 443, 993, 995, 3389]

// Submit jobs to the worker pool with rate limiting
let job_id = 1

let i = 0
while i < len(targets) {
    let target = targets[i]
    
    let j = 0
    while j < len(common_ports) {
        let port = common_ports[j]
        
        // Rate limit network operations
        if (conc_acquire_token("network_limiter", 1000)) {
            let scan_data = {
                "host": target,
                "port": port,
                "timeout": 3,
                "service_detection": true
            }
            
            if (conc_submit_job("port_scanner", "scan_" + str(job_id), "port_scan", scan_data)) {
                log("→ Submitted port scan job: " + target + ":" + str(port))
                job_id = job_id + 1
            }
        }
        j = j + 1
    }
    i = i + 1
}

log("First half complete - stopping here for testing")